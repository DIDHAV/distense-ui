import React, { Component } from 'react'
import IPFS from 'ipfs'

import web3, {
  selectContractInstance
} from '../web3.js';

import Head from '../components/common/Head'
import Layout from '../components/Layout'

const TasksABI ={
  "contract_name": "Tasks",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "ipfsHashID",
          "type": "bytes"
        }
      ],
      "name": "getTaskFromMapping",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "ind",
          "type": "uint256"
        }
      ],
      "name": "getTaskFromList",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numTasks",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTasksLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "ipfsHash",
          "type": "bytes"
        }
      ],
      "name": "getTaskByID",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasksList",
      "outputs": [
        {
          "name": "createdBy",
          "type": "address"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "url",
          "type": "string"
        },
        {
          "name": "project",
          "type": "string"
        },
        {
          "name": "subProject",
          "type": "string"
        },
        {
          "name": "ipfsHashID",
          "type": "bytes"
        },
        {
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_title",
          "type": "string"
        },
        {
          "name": "_url",
          "type": "string"
        },
        {
          "name": "_project",
          "type": "string"
        },
        {
          "name": "_subProject",
          "type": "string"
        },
        {
          "name": "_ipfsHashID",
          "type": "bytes"
        }
      ],
      "name": "createTask",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numContribs",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "url",
          "type": "string"
        }
      ],
      "name": "TaskCreated",
      "type": "event"
    }
  ],
  "unlinked_binary": "",
  "networks": {
    "15": {
      "events": {
        "0x77095e0022f23445ec617c0051fe671a43fd56c57a3b10fdda30a7b2b3ac8c51": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "purchaser",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "title",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "url",
              "type": "string"
            }
          ],
          "name": "TaskCreated",
          "type": "event"
        },
        "0xa8924143bcf4a5e0a12b38277a275d7d03b961ff035face5561097f9df5a21aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "purchaser",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "title",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "url",
              "type": "bytes32"
            }
          ],
          "name": "TaskCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x84afb1c5a4c04fad7fe898c766dedf975303da31",
      "updated_at": 1503102803682
    }
  },
  "schema_version": "0.0.5",
  "updated_at": 1503102803682
}

export default class Tasks extends Component {
  constructor(props) {
    super(props)
    this.state = {
      account: web3.eth.accounts[0] || null,
      tasks: [],
      errorMessages: []
    }
  }

  async componentWillMount() {

    this.node = await new IPFS({
      EXPERIMENTAL: {
        pubsub: true
      },
      repo: String(Math.random() + Date.now())
    })
    this.node.on('ready', () => {
      console.log('IPFS')
    })

    this.TasksContract = await selectContractInstance(TasksABI)
    const tasks = await this.getTasks()
    this.setState({ tasks })

  }

  async getTasks() {

    const numTasks = await this.TasksContract.getTasksLength()
    console.log(`Found ${numTasks} tasks`);

    const tasks = []
    for (let i = 0; i < numTasks; i++) {
      const taskArray = await this.TasksContract.getTaskFromList(i)
      const task = {}
      task.createdBy = web3.toHex(taskArray[0])
      task.title = taskArray[1]
      task.url = taskArray[2]
      console.log(`task.url: ${task.url}`)
      task.project = taskArray[3]
      task.subProject = taskArray[4]
      task.ipfsHash = taskArray[5]
      task.createdAt = taskArray[6]
      task.status = taskArray[7]
      tasks.push(task)
    }

    tasks.sort(function(a, b) {
      return a.createdAt > b.createdAt
    })

    return tasks
  }

  render() {

    const { tasks } = this.state
    return (
      <Layout>
        <Head title="Available Tasks"/>
        <div className="tasks-container">
          <h2>Available Tasks</h2>
          <div className="tasks-list">
            {tasks.length ? tasks.map(function (task) {
              return <Task key={Math.random().toString()} task={task}/>
            }) : 'No Tasks Available'
            }
          </div>
        </div>
        <style jsx>{`

        `}</style>
      </Layout>
    );
  }
}

const Task = ({ task }) => {
  return (
    <div>
      <a href={task.url}>{task.createdBy}</a>
    </div>
  );
};
